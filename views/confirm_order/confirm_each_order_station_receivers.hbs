<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="/css/confirm_order.css">


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js">
</script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js">
</script>

{{>station_employee/header}}
<div class="body-container">
    <nav class="pt-4" style="--bs-breadcrumb-divider: '>'; margin-left: 25px; font-size: 15px; color: gray"
        aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/confirm_order/confirm_station_receivers"
                    style="text-decoration: none;">Các lô hàng cần xác nhận</a></li>
            <li class="breadcrumb-item active" aria-current="page">Các mã hàng cần xác nhận</li>
        </ol>
    </nav>

    <div class="container pt-4 px-2">
        <form id="confirm-posts-station-receivers-form" action="/stored/confirm_posts_station_receivers" method="post">
            <input type="hidden" name="containerCode" value="{{container.containerCode}}">
            <div class="table-responsive">

                <p style="font-size: 1.1rem;"><strong>Xác nhận tình trạng giao hàng trong lô hàng <span
                            style="color: brown">{{container.containerCode}}</span> chuyển từ <span
                            style="color: brown;">{{thisStation.name}}</span>
                        đến người nhận:</strong></p>

                <table id="sortedTable" class="table table-responsive text-center" style="vertical-align: middle;">
                    <thead>
                        <tr
                            style="background-color: #eeeeee; vertical-align: middle; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                            <th class="border-0 text-center" scope="col" width="8%">Mã hàng</th>
                            <th class="border-0 text-center" scope="col" width="10%">Tên hàng</th>
                            <th class="border-0 text-center" scope="col" width="13%">Người nhận</th>
                            <th class="border-0 text-center" scope="col" width="12%">SĐT người nhận</th>
                            <th class="border-0 text-center" scope="col" width="19%">Địa chỉ người nhận</th>
                            <th class="border-0 text-center" scope="col" width="15%">Tình trạng</th>
                            <th class="border-0 text-center" scope="col" width="11%"><label
                                    class="confirm-checkbox all success"><input class="form-check-input"
                                        type="checkbox">
                                    Chọn tất cả</label>
                            </th>
                            <th class="border-0 text-center" scope="col" width="12%"><label
                                    class="confirm-checkbox all fail"><input class="form-check-input" type="checkbox">
                                    Chọn
                                    tất cả</label>
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        {{#each posts}}
                        <tr>
                            <td>{{this._id}}</td>
                            <td>{{this.name}}</td>
                            <td>{{this.receiverName}}</td>
                            <td>{{this.receiverPhoneNumber}}</td>
                            <td>{{this.receiverAddress}}</td>
                            <td>
                                <span class="post-status" data-status="{{this.status}}">

                                </span>
                            </td>
                            <td>
                                <label class="confirm-checkbox success">
                                    <input class="form-check-input" type="checkbox" name="receivedPostIds"
                                        value="{{this._id}}"><strong class="confirm-text success"> Đã giao</strong>
                                </label>
                            </td>
                            <td>
                                <label class="confirm-checkbox fail">
                                    <input class="form-check-input" type="checkbox" name="failedPostIds"
                                        value="{{this._id}}"><strong class="confirm-text fail"> Giao thất bại</strong>
                                </label>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>

                </table>

            </div>
        </form>
        <button id="submit-button" type="button" class="btn btn-success fw-bold mt-4 d-grid gap-2 col-4 mx-auto"
            data-bs-toggle="modal" data-bs-target="#confirm-submit" disabled>Xác nhận</button>
    </div>
</div>



<div class="modal fade" id="confirm-submit" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Xác nhận tình trạng giao hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn chắc chắn xác nhận tình trạng giao hàng của <span style="color: brown" id="numOfPosts">0</span> mã
                hàng thuộc lô hàng <span style="color: brown">{{container.containerCode}}</span> chứ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Bỏ lệnh</button>
                <button id="confirm-submit-button" type="button" class="btn btn-primary">Xác nhận</button>
            </div>
        </div>
    </div>
</div>



<script>
    const checkSuccessList = document.querySelectorAll('tbody tr td .confirm-checkbox.success');
    const checkSuccessAll = document.querySelector('.confirm-checkbox.all.success');
    const checkboxSuccessAll = checkSuccessAll.querySelector('input[type=checkbox]');
    const checkFailList = document.querySelectorAll('tbody tr td .confirm-checkbox.fail');
    const checkFailAll = document.querySelector('.confirm-checkbox.all.fail');
    const checkboxFailAll = checkFailAll.querySelector('input[type=checkbox]');
    const allCheckbox = document.querySelectorAll('input[type=checkbox]');
    const submitButton = document.querySelector('#submit-button');
    const numOfPosts = document.querySelector('#numOfPosts');
    const btnConfirmSubmit = document.getElementById('confirm-submit-button');
    const tableBodyRows = document.querySelectorAll('tbody tr');
    const dataForm = document.getElementById('confirm-posts-station-receivers-form');
    const containerCode = dataForm.querySelector("input[name='containerCode']").value;
    let checkedCount;

    btnConfirmSubmit.addEventListener('click', () => {
        const receivedPostIdsElements = dataForm.querySelectorAll("input[name='receivedPostIds']:checked");
        const failedPostIdsElements = dataForm.querySelectorAll("input[name='failedPostIds']:checked");
        const receivedPostIds = [];
        const failedPostIds = [];
        for (const element of receivedPostIdsElements) {
            receivedPostIds.push(element.value);
        }
        for (const element of failedPostIdsElements) {
            failedPostIds.push(element.value);
        }
        fetch("/stored/confirm_posts_station_receivers", {
            method: "post",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                containerCode,
                receivedPostIds,
                failedPostIds
            }),
        })
            .then((response) => {
                if (response.ok) {
                    return response.json();

                } else {
                    alert("Xác nhận thất bại!");
                }
            })
            .then((data) => {
                alert(data.message);
                if (data.noPostLeft === 'yes') {
                    window.location = "/confirm_order/confirm_station_receivers";
                } else {
                    location.reload();
                }

            })
            .catch((error) => {
                console.log(error);
            });
    });

    for (const row of tableBodyRows) {
        const postStatus = row.querySelector('.post-status');
        const status = postStatus.dataset.status;
        const checkboxs = row.querySelectorAll('.confirm-checkbox');
        let htmlContent;
        if (status === 'on way to receiver') {
            htmlContent = `<span class="rounded-pill align-items-center"
                                style="background-color: rgb(251, 242, 178); padding: 1px 9px"><i class="fa fa-circle"
                                    style="font-size: 11px; color: rgb(243, 183, 31)"></i><span class="ms-1"
                                    style="color: rgb(231, 162, 14); font-weight: bold;">Đang giao</span></span>`
        } else if (status === 'received') {
            htmlContent = `<span class="rounded-pill align-items-center"
                                    style="background-color: rgb(189, 242, 200); padding: 1px 13px"><i
                                        class="fa fa-circle" style="font-size: 11px; color: rgb(5, 144, 22)"></i><span
                                        class="ms-1" style="color: rgb(27, 178, 27); font-weight: bold;">Giao thành công</span></span>`

            for (const checkbox of checkboxs) {
                checkbox.innerHTML = '';
            }
        } else if (status === 'returned') {
            htmlContent = `<span class="rounded-pill align-items-center"
                                    style="background-color: rgb(248, 160, 160); padding: 1px 24px"><i
                                        class="fa fa-circle" style="font-size: 11px; color: rgb(220, 4, 4)"></i><span
                                        class="ms-1" style="color: rgb(162, 4, 4); font-weight: bold;">Giao thất bại</span></span>`
            for (const checkbox of checkboxs) {
                checkbox.innerHTML = '';
            }
        }
        postStatus.innerHTML = htmlContent;
    }

    function mouseListener(item) {
        item.addEventListener("mouseover", (e) => {
            item.classList.add('mouse-over');
        });
        item.addEventListener("mouseout", (e) => {
            item.classList.remove('mouse-over');
        });
    }

    checkSuccessList.forEach((item) => {
        mouseListener(item);
        item.addEventListener("click", (e) => {
            let isCheckAll = true;
            for (const i of checkSuccessList) {

                if (i.querySelector('input[type=checkbox]') && !i.querySelector('input[type=checkbox]').checked) {
                    isCheckAll = false;
                    break;
                }
            }
            checkboxSuccessAll.checked = isCheckAll;

            const failCheckbox = item.parentNode.parentNode.querySelector('.confirm-checkbox.fail input[type=checkbox]');
            if (failCheckbox.checked) {
                failCheckbox.checked = false;
                if (checkboxFailAll.checked) {
                    checkboxFailAll.checked = false;
                }
            }
        })
    });

    checkFailList.forEach((item) => {
        mouseListener(item);
        item.addEventListener("click", (e) => {
            let isCheckAll = true;
            for (const i of checkFailList) {
                if (i.querySelector('input[type=checkbox]') && !i.querySelector('input[type=checkbox]').checked) {
                    isCheckAll = false;
                    break;
                }
            }
            checkboxFailAll.checked = isCheckAll;

            const successCheckbox = item.parentNode.parentNode.querySelector('.confirm-checkbox.success input[type=checkbox]');
            if (successCheckbox.checked) {
                successCheckbox.checked = false;
                if (checkboxSuccessAll.checked) {
                    checkboxSuccessAll.checked = false;
                }
            }
        })
    });

    mouseListener(checkSuccessAll);

    checkSuccessAll.addEventListener("click", (e) => {
        checkSuccessList.forEach((item) => {
            if (item.querySelector('input[type=checkbox]')) {
                item.querySelector('input[type=checkbox]').checked = checkboxSuccessAll.checked;
            }

        });
        if (checkboxFailAll.checked) {
            checkboxFailAll.checked = false;
        }
        checkFailList.forEach((item) => {
            if (item.querySelector('input[type=checkbox]')) {
                item.querySelector('input[type=checkbox]').checked = false;
            }

        });
    });

    mouseListener(checkFailAll);

    checkFailAll.addEventListener("click", (e) => {
        checkFailList.forEach((item) => {
            if (item.querySelector('input[type=checkbox]')) {
                item.querySelector('input[type=checkbox]').checked = checkboxFailAll.checked;
            }
        });
        if (checkboxSuccessAll.checked) {
            checkboxSuccessAll.checked = false;
        }
        checkSuccessList.forEach((item) => {
            if (item.querySelector('input[type=checkbox]')) {
                item.querySelector('input[type=checkbox]').checked = false;
            }

        });
    });

    allCheckbox.forEach((item) => {
        item.addEventListener("change", (e) => {
            checkedCount = document.querySelectorAll('input[type="checkbox"]:checked').length;
            if (checkedCount !== 0) {
                submitButton.disabled = false;
                if (checkboxSuccessAll.checked || checkboxFailAll.checked) {
                    const totalPosts = checkedCount - 1;
                    numOfPosts.innerHTML = 'tất cả ' + totalPosts;
                } else if (checkedCount === checkSuccessList.length) {
                    numOfPosts.innerHTML = 'tất cả ' + checkedCount;
                } else {
                    numOfPosts.innerHTML = checkedCount;
                }

            } else {
                submitButton.disabled = true;
            }
        })
    });

</script>

<script>
    $('#sortedTable').DataTable();
</script>