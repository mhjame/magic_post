<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="/css/confirm_order.css">


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js">
</script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js">
</script>

{{#unless posts}}

<div class="alert alert-danger text-center" role="alert">
    Hiện không có mã hàng nào đang cần chuyển đến điểm giao dịch đã chọn!
</div>

{{/unless}}


<div class="container mt-5 px-2">
    <form id="create-wh-to-station-form" action="/create_order/{{desStation.id}}/create_wh_to_station_order_form" method="post">
        <input type="hidden" name="employeeId" value="{{employee.employeeId}}">
        <input type="hidden" name="employeeName" value="{{employee.lastName}} {{employee.firstName}}">
        <input type="hidden" name="receiverWarehouseId" value="{{workPlace.id}}">
        <input type="hidden" name="receiverWarehouseName" value="{{workPlace.name}}">
        <input type="hidden" name="receiverStationId" value="{{desStation.id}}">
        <input type="hidden" name="receiverStationName" value="{{desStation.name}}">
        <div class="table-responsive">

            <p style="font-size: 1.1rem;"><strong>Chọn các mã hàng để tạo đơn chuyển lô hàng từ <span
                        style="color: brown;">{{workPlace.name}}</span> đến
                    <span style="color: brown;">{{desStation.name}}</span>:</strong></p>

            <table id="sortedTable" class="table table-responsive text-center" style="vertical-align: middle;">
                <thead>
                    <tr
                        style="background-color: #eeeeee; vertical-align: middle; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                        <th class="border-0 text-center" scope="col" width="12%">Mã hàng</th>
                        <th class="border-0 text-center" scope="col" width="12%">Tên hàng</th>
                        <th class="border-0 text-center" scope="col" width="15%">Loại hàng</th>
                        <th class="border-0 text-center" scope="col" width="15%">Trọng lượng</th>
                        <th class="border-0 text-center" scope="col" width="27%">Tình trạng</th>
                        <th class="border-0 text-center" scope="col" width="19%"><label
                                class="confirm-checkbox all"><input class="form-check-input" type="checkbox"> Thêm vào lô hàng</label></th>
                    </tr>
                </thead>

                <tbody>
                    {{#each posts}}
                    <tr>
                        <td>{{this.id}}</td>
                        <td>{{this.name}}</td>
                        <td>{{renderArray this.genre}}</td>
                        <td>{{this.actualWeight}} kg</td>
                        <td>
                            <span class="post-status" data-status="{{this.status}}">

                            </span>
                        </td>
                        <td>
                            <label class="confirm-checkbox">
                                <input class="form-check-input" type="checkbox" name="postIds"
                                    value="{{this.id}}"><strong class="confirm-text success"> Thêm</strong>
                            </label>

                        </td>
                    </tr>
                    {{/each}}
                </tbody>

            </table>

        </div>
    </form>
    {{#if posts}}
    <button id="submit-button" type="button" class="btn btn-success fw-bold mt-4 d-grid gap-2 col-4 mx-auto" disabled>Tạo đơn</button>
    {{else}}
    <button id="return-button" type="button" class="btn btn-secondary fw-bold mt-4 d-grid gap-2 col-4 mx-auto" onclick="window.location.href='/create_order/get_des_stations'">Chọn điểm giao dịch khác</button>
    {{/if}}
</div>



<script>
    const checkList = document.querySelectorAll('tbody tr td .confirm-checkbox');
    const checkAll = document.querySelector('.confirm-checkbox.all');
    const checkboxAll = checkAll.querySelector('input[type=checkbox]');
    const allCheckbox = document.querySelectorAll('input[type=checkbox]');
    const submitButton = document.querySelector('#submit-button');
    const tableBodyRows = document.querySelectorAll('tbody tr');
    let checkedCount;

    submitButton.addEventListener('click', () => {
        document.getElementById('create-wh-to-station-form').submit();
    });

    for (const row of tableBodyRows) {
        const postStatus = row.querySelector('.post-status');
        const status = postStatus.dataset.status;
        let htmlContent;
        if (status === 'at rWarehouse') {
            htmlContent = `<span class="rounded-pill align-items-center"
                                style="background-color: rgb(251, 242, 178); padding: 1px 9px"><i class="fa fa-circle"
                                    style="font-size: 11px; color: rgb(243, 183, 31)"></i><span class="ms-1"
                                    style="color: rgb(231, 162, 14); font-weight: bold;">Đang ở điểm tập kết đích</span></span>`
        }
        postStatus.innerHTML = htmlContent;
    }

    function checkListMouseListener(item) {
        item.addEventListener("mouseover", (e) => {
            item.classList.add('mouse-over');
        });
        item.addEventListener("mouseout", (e) => {
            item.classList.remove('mouse-over');
        });
    }

    checkList.forEach((item) => {
        checkListMouseListener(item);
        item.addEventListener("click", (e) => {
            let isCheckAll = true;
            for (const i of checkList) {

                if (i.querySelector('input[type=checkbox]') && !i.querySelector('input[type=checkbox]').checked) {
                    isCheckAll = false;
                    break;
                }
            }
            checkboxAll.checked = isCheckAll;

        })
    });

    checkListMouseListener(checkAll);

    checkAll.addEventListener("click", (e) => {
        checkList.forEach((item) => {
            if (item.querySelector('input[type=checkbox]')) {
                item.querySelector('input[type=checkbox]').checked = checkboxAll.checked;
            }

        });
    });

    allCheckbox.forEach((item) => {
        item.addEventListener("change", (e) => {
            checkedCount = document.querySelectorAll('input[type="checkbox"]:checked').length;
            console.log(checkedCount);
            if (checkedCount !== 0) {
                submitButton.disabled = false;
            } else {
                submitButton.disabled = true;
            }
        })
    });

</script>

<script>
    $('#sortedTable').DataTable();
</script>